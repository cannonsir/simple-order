<?php

namespace Gtd\SimpleOrder\Models;

use Gtd\SimpleOrder\Contracts\OrderAbleContract;
use Illuminate\Database\Eloquent\Model;

class OrderItem extends Model
{
    protected $guarded = ['id'];

    protected $casts = [
        'orderable_json' => 'array'
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::created(function (self $item) {
            if (! $item->orderable instanceof OrderAbleContract) {
                throw new \RuntimeException('商品应实现 Gtd\SimpleOrder\Contracts\OrderAbleContract 接口');
            }

            $amount = \bcmul($item->orderable->getAmount(), $item->quantity);

            if (!is_numeric($amount)) {
                throw new \RuntimeException('商品金额非法');
            }

            $item->amount()->create(compact('amount'));

            // TODO 创建UNIT
        });
    }

    public function __construct(array $attributes = [])
    {
        parent::__construct($attributes);

        $this->setTable(config('simple-order.table_names.order_items'));
    }

    public function orderable()
    {
        return $this->morphTo();
    }

    public function units()
    {
        return $this->hasMany(OrderItemUnit::class, 'item_id');
    }

    public function amount()
    {
        return $this->hasOne(Amount::class, 'order_item_id');
    }
}