<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateOrderTables extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        $tableNames = config('simple-order.table_names');
        $precision = config('simple-order.decimal_precision');

        Schema::create($tableNames['orders'], function (Blueprint $table) use ($precision) {
            $table->bigIncrements('id');
            $table->morphs('user');
            $table->string('number')->index()->comment('订单号');
            $table->timestamps();
        });

        Schema::create($tableNames['order_items'], function (Blueprint $table) use ($tableNames, $precision) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('order_id')->index();
            $table->nullableMorphs('orderable');
            $table->json('orderable_origin')->comment('商品快照');
            $table->decimal('orderable_unit_price', $precision['total'], $precision['places'])->default(0)->comment('商品单价');
            $table->unsignedInteger('quantity')->comment('购买数量');
            $table->timestamps();

            $table->foreign('order_id')->references('id')->on($tableNames['orders'])->onDelete('cascade');
        });

        Schema::create($tableNames['order_item_units'], function (Blueprint $table) use ($tableNames) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('item_id')->index();
            $table->timestamps();

            $table->foreign('item_id')->references('id')->on($tableNames['order_items'])->onDelete('cascade');
        });

        Schema::create($tableNames['amounts'], function (Blueprint $table) use ($precision, $tableNames) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('order_id')->nullable()->unique()->index();
            $table->unsignedBigInteger('order_item_id')->nullable()->unique()->index();
            $table->unsignedBigInteger('order_item_unit_id')->nullable()->unique()->index();
            $table->decimal('adjustments_amount_total', $precision['total'], $precision['places'])->default(0)->comment('调整总金额 冗余');
            $table->decimal('should_amount', $precision['total'], $precision['places'])->default(0)->comment('原始金额');
            $table->decimal('res_amount', $precision['total'], $precision['places'])->default(0)->comment('调整后金额');
            $table->timestamps();

            $table->foreign('order_id')->references('id')->on($tableNames['orders'])->onDelete('cascade');
            $table->foreign('order_item_id')->references('id')->on($tableNames['order_items'])->onDelete('cascade');
            $table->foreign('order_item_unit_id')->references('id')->on($tableNames['order_item_units'])->onDelete('cascade');
        });

        Schema::create($tableNames['adjustments'], function (Blueprint $table) use ($precision, $tableNames) {
            $table->increments('id');
            $table->unsignedBigInteger('order_id')->nullable()->unique()->index();
            $table->unsignedBigInteger('order_item_id')->nullable()->unique()->index();
            $table->unsignedBigInteger('order_item_unit_id')->nullable()->unique()->index();
            $table->string('label')->comment('标注 优惠券，运费等');
            $table->boolean('included')->default(true)->comment('是否会影响最终订单需要支付的价格');
            $table->decimal('amount', $precision['total'], $precision['places'])->default(0)->comment('金额');
            $table->timestamps();

            $table->foreign('order_id')->references('id')->on($tableNames['orders'])->onDelete('cascade');
            $table->foreign('order_item_id')->references('id')->on($tableNames['order_items'])->onDelete('cascade');
            $table->foreign('order_item_unit_id')->references('id')->on($tableNames['order_item_units'])->onDelete('cascade');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        $tableNames = config('simple-order.table_names');

        Schema::dropIfExists($tableNames['adjustments']);
        Schema::dropIfExists($tableNames['amounts']);
        Schema::dropIfExists($tableNames['order_item_units']);
        Schema::dropIfExists($tableNames['order_items']);
        Schema::dropIfExists($tableNames['orders']);
    }
}
